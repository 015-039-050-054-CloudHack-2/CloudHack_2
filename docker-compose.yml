version: "3.1"
services:
  rabbitmq-container:
    image: rabbitmq:3-management
    hostname: rabbitmq-container
    ports:
      - 5673:5673
      - 5672:5672
      - 15672:15672
    restart: on-failure
    
  cc-producer:
      hostname: cc-producer
      build: ./microservice-1/
      ports:
        - 3000:3000
      environment:
      - QUEUE_NAME=${QUEUE_NAME}
      - AMQP_HOST=${AMQP_HOST}
      depends_on:
        - rabbitmq-container
      restart: on-failure
  
  cc-consumer:
    build: ./microservice-3/
    environment:
      - QUEUE_NAME=${QUEUE_NAME}
      - AMQP_HOST=${AMQP_HOST}
      - CONSUMER_NAME=${CONSUMER_NAME}
    depends_on:
        - cc-producer
    restart: on-failure
    
  
  cc-database:
    build: ./microservice-2/
    environment:
      - QUEUE_NAME=${DATA_QUEUE_NAME}
    depends_on:
        - cc-producer
    restart: on-failure
    links:
      - mongo

  # db:
  #   image: mongo
  #   hostname: test_mongodb
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=pass
  #   ports:
  #     - 27017:27017
  #   depends_on:
  #         - cc-database
  #   restart: on-failure
  # pycode:
    # build: ./microservice-2/
    # links:
      # - mongodb
  # mymongodb:
  #   image: mongo
  #   ports:
  #     - 27017:27017

  mongo:
    image: mongo:4.4.13
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
